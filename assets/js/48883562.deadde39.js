"use strict";(self.webpackChunkmacroscriptingmod_docs=self.webpackChunkmacroscriptingmod_docs||[]).push([[181],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},k="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),k=u(n),c=a,m=k["".concat(o,".").concat(c)]||k[c]||d[c]||i;return n?r.createElement(m,l(l({ref:t},s),{},{components:n})):r.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=c;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[k]="string"==typeof e?e:a,l[1]=p;for(var u=2;u<i;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1607:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>k,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={tags:["Lib"]},l="Input",p={unversionedId:"libraries/input",id:"libraries/input",title:"Input",description:'require("input")',source:"@site/docs/libraries/input.md",sourceDirName:"libraries",slug:"/libraries/input",permalink:"/MacroScriptingMod/docs/libraries/input",draft:!1,editUrl:"https://github.com/Matix-Media/MacroScriptingMod/tree/docs/docs/libraries/input.md",tags:[{label:"Lib",permalink:"/MacroScriptingMod/docs/tags/lib"}],version:"current",frontMatter:{tags:["Lib"]},sidebar:"tutorialSidebar",previous:{title:"GUI",permalink:"/MacroScriptingMod/docs/libraries/gui"},next:{title:"JSON",permalink:"/MacroScriptingMod/docs/libraries/json"}},o={},u=[{value:"Mapped Keys",id:"mapped-keys",level:2},{value:"Functions",id:"functions",level:2},{value:"<code>key_down(key)</code>",id:"key_downkey",level:3},{value:"<code>key_up(key)</code>",id:"key_upkey",level:3},{value:"<code>press_key(key)</code>",id:"press_keykey",level:3}],s={toc:u};function k(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"input"},"Input"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'require("input")')),(0,a.kt)("p",null,"The input functions can be used to simulate keyboard and mouse inputs."),(0,a.kt)("h2",{id:"mapped-keys"},"Mapped Keys"),(0,a.kt)("p",null,"Mapped keys are retrieved from the player settings. This makes them useable even if the player changes the key in the settings."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"forward"),": The forward key (default: ",(0,a.kt)("inlineCode",{parentName:"li"},"w"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"back"),": The back key (default: ",(0,a.kt)("inlineCode",{parentName:"li"},"s"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"left"),": The left key (default: ",(0,a.kt)("inlineCode",{parentName:"li"},"a"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"right"),": The right key (default: ",(0,a.kt)("inlineCode",{parentName:"li"},"d"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"jump"),": The jump key (default: ",(0,a.kt)("inlineCode",{parentName:"li"},"space"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sneak"),": The sneak key (default: ",(0,a.kt)("inlineCode",{parentName:"li"},"sneak"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"player_list"),": The player list key (default: ",(0,a.kt)("inlineCode",{parentName:"li"},"tab"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sprint"),": The sprint key (default: ",(0,a.kt)("inlineCode",{parentName:"li"},"control"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"attack"),": The attack key (default: ",(0,a.kt)("inlineCode",{parentName:"li"},"mouse left click"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"use"),": The use/interact key (default: ",(0,a.kt)("inlineCode",{parentName:"li"},"mouse right click"),")")),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h3",{id:"key_downkey"},(0,a.kt)("inlineCode",{parentName:"h3"},"key_down(key)")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"key"),": key to be pressed down. Can either be ",(0,a.kt)("a",{parentName:"li",href:"https://www.glfw.org/docs/3.3/group__keys.html"},"keycode"),", key as string or a ",(0,a.kt)("a",{parentName:"li",href:"#mapped-keys"},"mapped key"))),(0,a.kt)("p",null,"Presses down the specified key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="example.lua"',title:'"example.lua"'},'input.key_down("forward")\ninput.key_down("w")\ninput.key_down(87)\n')),(0,a.kt)("h3",{id:"key_upkey"},(0,a.kt)("inlineCode",{parentName:"h3"},"key_up(key)")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"key"),": key to be released. Can either be ",(0,a.kt)("a",{parentName:"li",href:"https://www.glfw.org/docs/3.3/group__keys.html"},"keycode"),", key as string or a ",(0,a.kt)("a",{parentName:"li",href:"#mapped-keys"},"mapped key"))),(0,a.kt)("p",null,"Releases the specified key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="example.lua"',title:'"example.lua"'},'input.key_up("forward")\ninput.key_up("w")\ninput.key_up(87)\n')),(0,a.kt)("h3",{id:"press_keykey"},(0,a.kt)("inlineCode",{parentName:"h3"},"press_key(key)")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"key"),": key to be press. Can either be ",(0,a.kt)("a",{parentName:"li",href:"https://www.glfw.org/docs/3.3/group__keys.html"},"keycode"),", key as string or a ",(0,a.kt)("a",{parentName:"li",href:"#mapped-keys"},"mapped key"))),(0,a.kt)("p",null,"Presses a key down for a short time."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="example.lua"',title:'"example.lua"'},'input.press_key("forward")\ninput.press_key("w")\ninput.press_key(87)\n')))}k.isMDXComponent=!0}}]);