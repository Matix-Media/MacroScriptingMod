"use strict";(self.webpackChunkmacroscriptingmod_docs=self.webpackChunkmacroscriptingmod_docs||[]).push([[602],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>s});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=m(n),k=l,s=c["".concat(p,".").concat(k)]||c[k]||u[k]||i;return n?a.createElement(s,r(r({ref:t},d),{},{components:n})):a.createElement(s,r({ref:t},d))}));function s(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:l,r[1]=o;for(var m=2;m<i;m++)r[m]=n[m];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},7376:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var a=n(7462),l=(n(7294),n(3905));const i={tags:["Lib"]},r="World",o={unversionedId:"libraries/world",id:"libraries/world",title:"World",description:'require("world")',source:"@site/docs/libraries/world.md",sourceDirName:"libraries",slug:"/libraries/world",permalink:"/MacroScriptingMod/docs/libraries/world",draft:!1,editUrl:"https://github.com/Matix-Media/MacroScriptingMod/tree/docs/docs/libraries/world.md",tags:[{label:"Lib",permalink:"/MacroScriptingMod/docs/tags/lib"}],version:"current",frontMatter:{tags:["Lib"]},sidebar:"tutorialSidebar",previous:{title:"Server",permalink:"/MacroScriptingMod/docs/libraries/server"},next:{title:"Commands",permalink:"/MacroScriptingMod/docs/commands"}},p={},m=[{value:"Functions",id:"functions",level:2},{value:"<code>get_block(x, y, z)</code>",id:"get_blockx-y-z",level:3},{value:"<code>get_block_relative(x, y, z)</code>",id:"get_block_relativex-y-z",level:3},{value:"<code>get_nearby_entities(radius)</code>",id:"get_nearby_entitiesradius",level:3},{value:"<code>get_entities()</code>",id:"get_entities",level:3},{value:"<code>show_esp_box(min_x, min_y, min_z, max_x, min_y, min_z)</code>",id:"show_esp_boxmin_x-min_y-min_z-max_x-min_y-min_z",level:3},{value:"<code>show_esp_box(min_x, min_y, min_z, max_x, min_y, min_z, red, green, blue)</code>",id:"show_esp_boxmin_x-min_y-min_z-max_x-min_y-min_z-red-green-blue",level:3},{value:"<code>remove_esp_box(id)</code>",id:"remove_esp_boxid",level:3},{value:"<code>show_tracer(x, y, z)</code>",id:"show_tracerx-y-z",level:3},{value:"<code>show_tracer(x, y, z, red, green, blue)</code>",id:"show_tracerx-y-z-red-green-blue",level:3},{value:"<code>remove_tracer(id)</code>",id:"remove_tracerid",level:3},{value:"<code>break_block(x, y, z)</code>",id:"break_blockx-y-z",level:3},{value:"<code>calc_yaw_pitch_to(x, z)</code>",id:"calc_yaw_pitch_tox-z",level:3}],d={toc:m};function c(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"world"},"World"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},'require("world")')),(0,l.kt)("p",null,"The world library contains all kind of functions related to the world and the entities in it."),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("h3",{id:"get_blockx-y-z"},(0,l.kt)("inlineCode",{parentName:"h3"},"get_block(x, y, z)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"x"),": X coordinate of block"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"y"),": Y coordinate of block"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"z"),": Z coordinate of block")),(0,l.kt)("p",null,"Returns information about the block specified."),(0,l.kt)("p",null,"The returned object contains the block ",(0,l.kt)("inlineCode",{parentName:"p"},"x"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"y"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"z")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"type"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="example.lua"',title:'"example.lua"'},'local block = world.get_block(0, -64, 0)\n\nprint("Block at " .. block.x .. "/" .. block.y .. "/" .. block.z .. " is of type: " .. block.type)\n')),(0,l.kt)("h3",{id:"get_block_relativex-y-z"},(0,l.kt)("inlineCode",{parentName:"h3"},"get_block_relative(x, y, z)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"x"),": relative X coordinate of block"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"y"),": relative Y coordinate of block"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"z"),": relative Z coordinate of block")),(0,l.kt)("p",null,"Returns information about the block specified relative to the player."),(0,l.kt)("p",null,"The returned object contains the block ",(0,l.kt)("inlineCode",{parentName:"p"},"x"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"y"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"z")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"type"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="example.lua"',title:'"example.lua"'},'local block = world.get_block_relative(0, -1, 0)\n\nprint("Relative block at " .. block.x .. "/" .. block.y .. "/" .. block.z .. " is of type: " .. block.type)\n')),(0,l.kt)("h3",{id:"get_nearby_entitiesradius"},(0,l.kt)("inlineCode",{parentName:"h3"},"get_nearby_entities(radius)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"radius"),": radius around the player")),(0,l.kt)("p",null,"Returns a list of entities in the specified radius around the player."),(0,l.kt)("p",null,"The returned list contains the entities ",(0,l.kt)("inlineCode",{parentName:"p"},"ID"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"x"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"y"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"z"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"pitch"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"yaw"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"helmet"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"chest_plate"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"leggings")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"boots"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="example.lua"',title:'"example.lua"'},'local entities = world.get_nearby_entities(5)\n\nfor _, entity in pairs(entities) do\n    print("Nearby entity is of type: " .. entity.type)\nend\n')),(0,l.kt)("h3",{id:"get_entities"},(0,l.kt)("inlineCode",{parentName:"h3"},"get_entities()")),(0,l.kt)("p",null,"Returns a list of all loaded entities inside the world."),(0,l.kt)("p",null,"The returned list contains the entities ",(0,l.kt)("inlineCode",{parentName:"p"},"ID"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"x"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"y"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"z"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"pitch"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"yaw"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"helmet"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"chest_plate"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"leggings")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"boots"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="example.lua"',title:'"example.lua"'},'local entities = world.get_entities()\n\nfor _, entity in pairs(entities) do\n    print("Entity is of type: " .. entity.type)\nend\n')),(0,l.kt)("h3",{id:"show_esp_boxmin_x-min_y-min_z-max_x-min_y-min_z"},(0,l.kt)("inlineCode",{parentName:"h3"},"show_esp_box(min_x, min_y, min_z, max_x, min_y, min_z)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"min_x"),": minimal X coordinate of the ESP box"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"min_y"),": minimal Y coordinate of the ESP box"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"min_z"),": minimal Z coordinate of the ESP box"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"max_x"),": maximal X coordinate of the ESP box"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"max_y"),": maximal Y coordinate of the ESP box"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"max_z"),": maximal Z coordinate of the ESP box")),(0,l.kt)("p",null,"Shows an ESP box at the specified box location. The color of the ESP box will depend of the distance of the player to the box. A custom color can be shown by ",(0,l.kt)("a",{parentName:"p",href:"#show_esp_boxmin_x-min_y-min_z-max_x-min_y-min_z-red-green-blue"},"specifying the color")," after the box coordinates."),(0,l.kt)("p",null,"The returned value is the ID of the ESP box. It can be used to ",(0,l.kt)("a",{parentName:"p",href:"#remove_esp_boxid"},"remove the ESP box")," again."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="example.lua"',title:'"example.lua"'},"local esp_id = world.show_esp_box(0, -60, 0, 1, -61, 1)\n")),(0,l.kt)("h3",{id:"show_esp_boxmin_x-min_y-min_z-max_x-min_y-min_z-red-green-blue"},(0,l.kt)("inlineCode",{parentName:"h3"},"show_esp_box(min_x, min_y, min_z, max_x, min_y, min_z, red, green, blue)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"min_x"),": minimal X coordinate of the ESP box"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"min_y"),": minimal Y coordinate of the ESP box"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"min_z"),": minimal Z coordinate of the ESP box"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"max_x"),": maximal X coordinate of the ESP box"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"max_y"),": maximal Y coordinate of the ESP box"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"max_z"),": maximal Z coordinate of the ESP box"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"red"),": red value of RGB for ESP box"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"green"),": green value of RGB for ESP box"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blue"),": blue value of RGB for ESP box")),(0,l.kt)("p",null,"Shows a colored ESP box at the specified box location."),(0,l.kt)("p",null,"The returned value is the ID of the ESP box. It can be used to ",(0,l.kt)("a",{parentName:"p",href:"#remove_esp_boxid"},"remove the ESP box")," again."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="example.lua"',title:'"example.lua"'},"local esp_id = world.show_esp_box(0, -60, 0, 1, -61, 1, 0, 0, 200)\n")),(0,l.kt)("h3",{id:"remove_esp_boxid"},(0,l.kt)("inlineCode",{parentName:"h3"},"remove_esp_box(id)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"id"),": ID of ESP box to be removed")),(0,l.kt)("p",null,"Removes the specified ESP box."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="example.lua"',title:'"example.lua"'},"local esp_id = world.show_esp_box(0, -60, 0, 1, -61, 1)\n\nworld.remove_esp_box(esp_id)\n")),(0,l.kt)("h3",{id:"show_tracerx-y-z"},(0,l.kt)("inlineCode",{parentName:"h3"},"show_tracer(x, y, z)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"x"),": X coordinate of the target of the tracer"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"y"),": Y coordinate of the target of the tracer"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"z"),": Z coordinate of the target of the tracer")),(0,l.kt)("p",null,"Shows a tracer line pointer towards the target location."),(0,l.kt)("p",null,"The returned value is the ID of the tracer. It can be used to ",(0,l.kt)("a",{parentName:"p",href:"#remove_tracerid"},"remove the tracer")," again."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="example.lua"',title:'"example.lua"'},"local tracer_id = world.show_tracer(0, -60, 0)\n")),(0,l.kt)("h3",{id:"show_tracerx-y-z-red-green-blue"},(0,l.kt)("inlineCode",{parentName:"h3"},"show_tracer(x, y, z, red, green, blue)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"x"),": X coordinate of the target of the tracer"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"y"),": Y coordinate of the target of the tracer"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"z"),": Z coordinate of the target of the tracer"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"red"),": red value of RGB for the tracer"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"green"),": green value of RGB for the tracer"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blue"),": blue value of RGB for the tracer")),(0,l.kt)("p",null,"Shows a colored tracer line pointer towards the target location."),(0,l.kt)("p",null,"The returned value is the ID of the tracer. It can be used to ",(0,l.kt)("a",{parentName:"p",href:"#remove_tracerid"},"remove the tracer")," again."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="example.lua"',title:'"example.lua"'},"local tracer_id = world.show_tracer(0, -60, 0, 0, 0, 200)\n")),(0,l.kt)("h3",{id:"remove_tracerid"},(0,l.kt)("inlineCode",{parentName:"h3"},"remove_tracer(id)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"id"),": ID of tracer to be removed")),(0,l.kt)("p",null,"Removes the specified tracer."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="example.lua"',title:'"example.lua"'},"local tracer_id = world.show_tracer(0, -60, 0)\n\nworld.remove_tracer(tracer_id)\n")),(0,l.kt)("h3",{id:"break_blockx-y-z"},(0,l.kt)("inlineCode",{parentName:"h3"},"break_block(x, y, z)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"x"),": X coordinate of block"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"y"),": Y coordinate of block"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"z"),": Z coordinate of block")),(0,l.kt)("p",null,"Tries breaks the specified block using the block break animation."),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"Only works if the block is within the players reach.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="example.lua"',title:'"example.lua"'},"world.break_block(0, -61, 0)\n")),(0,l.kt)("h3",{id:"calc_yaw_pitch_tox-z"},(0,l.kt)("inlineCode",{parentName:"h3"},"calc_yaw_pitch_to(x, z)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"x"),": target X coordinate"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"z"),": target Z coordinate")),(0,l.kt)("p",null,"Calculates the ",(0,l.kt)("inlineCode",{parentName:"p"},"yaw")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"pitch")," to the target location."),(0,l.kt)("p",null,"The returned object contains the ",(0,l.kt)("inlineCode",{parentName:"p"},"pitch")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"yaw"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="example.lua"',title:'"example.lua"'},'local direction = world.calc_yaw_pitch_to(1, 1)\n\nprint("Yaw: " .. direction.yaw .. " Pitch: " .. direction.pitch)\n')))}c.isMDXComponent=!0}}]);